server:
  port: 80

api-prefix: /api

# yaml/yml 파일 - Thymeleaf 설정
thymeleaf:
  cache: false
  check-template-location: true
  prefix: classpath:/templates/
  suffix: .html
  enabled: true

spring:
  profiles:
    include: oauth # application-oauth.yaml ?? ??

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?characterEncoding=utf8&serverTimezone=Asia/Seoul
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}

  jpa:
    open-in-view: false   # Keep entities within method only
    properties:
      hibernate:
        default_batch_fetch_size: 100 # Specify the batch size 100

  data:
    mongodb:
      host: ${MONGO_HOST} # localhost
      port: ${MONGO_PORT} # 27017
      database: easy-to-dedicate
      authentication-database: admin
      username: ${MONGO_USERNAME}
      password: ${MONGO_PASSWORD}


  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}

#    produce:
#      queue:
#        name: etd_produce_queue
#      exchange:
#        name: etd_produce_exchange
#      routing:
#        key: etd_produce_routing_key
#
#    consume:
#      queue:
#        name: etd_consume_queue
#      exchange:
#        name: etd_consume_exchange
#      routing:
#        key: etd_consume_routing_key
#

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    region: ${AWS_STATIC_REGION}
    s3:
      bucket: ${AWS_S3_BUCKET}

